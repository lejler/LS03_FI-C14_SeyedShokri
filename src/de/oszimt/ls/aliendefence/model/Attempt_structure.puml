@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": false,
    "cutConstructors": false
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": false,
    "hideInterfaceCalls": false, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "de.oszimt.ls.aliendefence.model.Attempt",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline


'nodes
subgraph cluster_1007187718 {
   	label=oszimt
	labeljust=l
	fillcolor="#ececec"
	style=filled

   subgraph cluster_487729413 {
   	label=ls
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled

   Attempt249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CENTER" >Attempt</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   datetime: LocalDateTime</TD></TR>
<TR><TD ALIGN="LEFT" >-   highscorePoints: double</TD></TR>
<TR><TD ALIGN="LEFT" >-   hitsShots: double</TD></TR>
<TR><TD ALIGN="LEFT" >-   hitsTargets: double</TD></TR>
<TR><TD ALIGN="LEFT" >-   level: Level</TD></TR>
<TR><TD ALIGN="LEFT" >-   placement: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   reactionDuration: double</TD></TR>
<TR><TD ALIGN="LEFT" >-   user: User</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Hitbox249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CENTER" >Hitbox</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   height: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   point: Point</TD></TR>
<TR><TD ALIGN="LEFT" >-   width: int</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ contains(p: Point): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ contains(x: int, y: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ contains(hitbox: Hitbox): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateRandomHitbox(): Hitbox</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Level249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CENTER" >Level</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   DEFAULT_DURATION: long</TD></TR>
<TR><TD ALIGN="LEFT" >-   backgroundImage: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   duration: long</TD></TR>
<TR><TD ALIGN="LEFT" >-   level_id: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   targets: List&lt;Target&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Point249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CENTER" >Point</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   x: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   y: int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Target249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CEN" >Target</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   duration: long</TD></TR>
<TR><TD ALIGN="LEFT" >-   hit: boolean</TD></TR>
<TR><TD ALIGN="LEFT" >-   hitbox: Hitbox</TD></TR>
<TR><TD ALIGN="LEFT" >-   imageAddress: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   target_id: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   time: long</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getRandomTarget(screenResolution_X: int, screenResolution_Y: int): Target</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

User249431236[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="CEN" >User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   birthday: LocalDate</TD></TR>
<TR><TD ALIGN="LEFT" >-   city: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   final_grade: double</TD></TR>
<TR><TD ALIGN="LEFT" >-   first_name: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   house_number: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   loginname: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   marital_status: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   p_user_id: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   postal_code: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   salary_expectations: int</TD></TR>
<TR><TD ALIGN="LEFT" >-   street: String</TD></TR>
<TR><TD ALIGN="LEFT" >-   sur_name: String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Attempt249431236 -> Level249431236[label="level
[0..1]"];
Attempt249431236 -> User249431236[label="user
[0..1]"];
Hitbox249431236 -> Point249431236[label="point
[0..1]"];
Level249431236 -> Target249431236[label="targets
[0..*]"];
Target249431236 -> Hitbox249431236[label="hitbox
[0..1]"];
    
}
@enduml